apply plugin: 'com.diffplug.spotless'

def createLicenseWith = { File license, String startComment, String endComment, String lineComment ->
    def tmp = File.createTempFile('tmp', '.tmp')
    tmp.withWriter {
        def w = it
        w.writeLine(startComment)
        license.eachLine {
            w << lineComment
            w.writeLine(it)
        }
        w.writeLine(endComment)
        w.writeLine("")
    }
    return tmp
}

def createPythonLicenseWith = { license ->
    return createLicenseWith(license, '"""', '"""', "")
}

def createJavaLicenseWith = { license ->
    return createLicenseWith(license, '/*', ' */', " * ")
}

def excludes = [
    'build/*',
    'node_modules/*',
    '.eggs/*',
    '.mypy_cache/*',
    '.venv/*',
].collect { project.file(it).path }

spotless {
    ratchetFrom 'origin/master'

    java {
        target 'src/**/*.java'
        targetExclude excludes

        importOrder()

        eclipse('4.16.0').configFile(rootProject.file('tools/gradle/codestyle/java-google-style.xml'))

        licenseHeaderFile createJavaLicenseWith(rootProject.file('LICENSE'))
        removeUnusedImports()
        trimTrailingWhitespace()
    }
    groovyGradle {
        target '*.gradle'
        targetExclude excludes
    }
    sql {
        target '**/*.sql'
        targetExclude excludes

        dbeaver().configFile(rootProject.file('tools/gradle/codestyle/sql-dbeaver.properties'))
    }
    python {
        target '**/*.py'
        targetExclude excludes

        licenseHeaderFile createPythonLicenseWith(rootProject.file('LICENSE')), '(from|import|# generated)'
    }
    format 'styling', {
        target '**/*.json', '**/*.yaml'
        targetExclude excludes

        prettier()
    }
}
check.dependsOn 'spotlessCheck'